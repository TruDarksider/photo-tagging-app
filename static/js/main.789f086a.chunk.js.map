{"version":3,"sources":["Components/GameClock.js","Components/GameBar.js","Components/PlayArea.js","init-firebase.js","App.js","index.js"],"names":["GameClock","props","colors","_useState","useState","_useState2","_slicedToArray","time","setTime","_useState3","_useState4","isRunning","setIsRunning","useEffect","interval","setInterval","prevTime","clearInterval","length","found","minutes","Math","floor","seconds","milliseconds","React","createElement","className","toString","padStart","GameBar","map","color","key","id","bool","style","background","isColorFound","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","PlayArea","answerKey","updateFound","cursor","setCursor","xCoor","setXCoor","_useState5","_useState6","yCoor","setYCoor","_useState7","_useState8","colorClicked","setColorClicked","createBoard","changeCursor","prevState","handleCorrectGuess","data","colorGuess","top","left","document","querySelector","backgroundColor","toast","success","handleIncorrectGuess","message","rgba2hex","rgba","concat","match","n","round","parseFloat","toUpperCase","replace","join","_ref","_asyncToGenerator","_callee","j","square","thisRed","thisGreen","thisBlue","rgb","_context","classList","add","setAttribute","appendChild","apply","arguments","onClick","e","getElementById","target","matches","remove","removeDropdown","textContent","matchedColor","find","item","onclick","isThisTheColor","bounds","parentNode","getBoundingClientRect","clientX","clientY","mouseMenu","x","y","position","colorOptions","at","color1","color2","color3","toggle","showColorOptions","Toaster","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","App","setInfo","colorCollectionRef","collection","getDocs","response","allColors","docs","doc","colorArray","index","random","indexOf","console","log","getThreeColors","getColors","_step","tempColor","_iterator","_createForOfIteratorHelper","s","f","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.789f086a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst GameClock = (props) => {\n    const { colors } = props\n    const [time, setTime] = useState(0);\n    const [isRunning, setIsRunning] = useState(true);\n\n    useEffect(() => {\n        let interval;\n        if (isRunning) {\n            interval = setInterval(() => {\n                setTime((prevTime) => prevTime + 10);\n            }, 10)\n        } else if (!isRunning) {\n            clearInterval(interval);\n        }\n        endGame();\n        return () => clearInterval(interval);\n    }, [time, isRunning]);\n\n    function endGame() {\n      if (colors.length === 3 && colors[0].found && colors[1].found && colors[2].found) {\n        setIsRunning(false);\n      }\n    }\n\n    const minutes = Math.floor(time / 60000 % 60);\n    const seconds = Math.floor(time / 1000 % 60);\n    const milliseconds = time / 10 % 100;\n\n    return (\n        <div className='GameClockContainer'>\n            <span className='GameClock'>{minutes.toString().padStart(2,'00')}:{seconds.toString().padStart(2, '00')}.{milliseconds.toString().padStart(2, '00')}</span>\n        </div>\n    )\n}\n\nexport default GameClock;","import React from \"react\";\nimport GameClock from \"./GameClock\";\n\nconst GameBar = (props) => {\n  const { colors } = props;\n\n  function isColorFound(bool, color) {\n        return bool ? (\n          <span\n            //A is added in front because some Hex values would produce an invalid id\n            id={\"A\" + color}\n            style={{ background: \"#\" + color.id }}\n            key={color}\n          >\n            {color}\n          </span>\n        ) : (\n          <span id={\"A\" + color} key={color}>\n            {color}\n          </span>\n        );\n    }\n\n    return (\n        <div className=\"GameBar\">\n            <h2>Match the Colors</h2>\n            {colors.map(color => {\n                return (\n                <div key={color.id}>\n                    {isColorFound(color.found, color.id) }\n                </div>\n                );\n                })}\n        <GameClock colors={ colors } />\n        </div>\n    );\n};\n\nexport default GameBar;","import React, { useEffect, useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\n\n\nconst PlayArea = (props) => {\n  const { answerKey, updateFound } = props;\n  const [cursor, setCursor] = useState('crosshair');\n  const [xCoor, setXCoor] = useState(0);\n  const [yCoor, setYCoor] = useState(0);\n  const [colorClicked, setColorClicked] = useState(' ')\n\n    useEffect(()=>{\n        createBoard();    \n    },[])\n\n  const changeCursor = () => {\n    setCursor(prevState =>{\n      if(prevState === 'crosshair'){\n        return 'pointer'\n      }\n      return 'crosshair';\n    });\n  }\n\n  function gameOverToast() {\n    if (answerKey[0].found && answerKey[1].found && answerKey[2].found) {\n      toast.success('You found all of the colors!');\n    }\n  }\n\n  const handleGuess = () => {\n    document.querySelector('#PlayArea').onclick = function getCoordinates(e) {\n      if (!e.target.matches('li')) {\n        let bounds = e.target.parentNode.getBoundingClientRect();\n        setXCoor(e.clientX - bounds.left);\n        setYCoor(e.clientY - bounds.top);\n        setColorClicked(rgba2hex(e.target.style.backgroundColor));\n      }\n    }\n  }\n\n  const handleCorrectGuess = (data, colorGuess) => {\n    if (data.top < yCoor && data.top + 108 > yCoor && data.left < xCoor && data.left + 128 > xCoor) {\n      //Update Color.Found and Change background color\n      let id = '#A' + colorGuess; //'A' is because some id's would be invalid\n      document.querySelector(id).style.backgroundColor = '#' + colorGuess;\n      toast.success('Correct!');\n      gameOverToast();\n    } else {\n      handleIncorrectGuess(data);\n    }\n  }\n\n  const handleIncorrectGuess = (data) => {\n      let message = 'Incorrect: Try again with';\n      if (data.left < xCoor && xCoor < data.left + 128 && data.top < yCoor) {\n        message += \" more green and red (up)\";\n      }\n      else if (data.left < xCoor && xCoor < data.left + 128 && data.top > yCoor) {\n        message += \" less green and red (down)\";\n      }\n      else if (data.left < xCoor && data.top < yCoor && yCoor < data.top + 108) {\n        message += \" less green and blue (left)\";\n      }\n      else if (data.left > xCoor && data.top < yCoor && yCoor < data.top + 108) {\n        message += \" more green and blue (right)\";\n      }\n      else if (data.left > xCoor && data.top > yCoor) {\n        message += ' more blue (diag down right)';\n      }\n      else if (data.left > xCoor && data.top < yCoor) {\n        message += \" more green (diag up right)\";\n      }\n      else if (data.left < xCoor && data.top > yCoor) {\n        message += \" less green (diag down left)\";\n      }\n      else if (data.left < xCoor && data.top < yCoor) {\n        message += \" more red (diag up left)\";\n      }\n      toast(message);\n    }\n\n  const isThisTheColor = (e) => {\n    if(e.target.matches('li')){\n      let colorGuess = e.target.textContent;\n      let matchedColor = answerKey.find(item => item.id === colorClicked);\n      if (matchedColor) {\n        e.target.onclick = updateFound(e);\n        handleCorrectGuess(matchedColor.data, colorGuess);\n      } else {\n        handleIncorrectGuess(\n          answerKey.find((item) => item.id === colorGuess).data\n        );\n      }\n    }\n  }\n\n  function showColorOptions(e) {\n    //Create Menu Container Div\n    let mouseMenu = document.createElement('div');\n    mouseMenu.setAttribute('id', 'myDropdown');\n    mouseMenu.classList.add('dropdown-content');\n    let x = e.clientX;\n    let y = e.clientY;\n    mouseMenu.style.position = 'fixed';\n    mouseMenu.style.left = x + 'px';\n    mouseMenu.style.top = y + 'px';\n    //Create Menu Options\n    let colorOptions = document.createElement('ul');\n    if (!answerKey.at(0).found) {\n      let color1 = document.createElement(\"li\");\n      color1.textContent = answerKey.at(0).id;\n      colorOptions.appendChild(color1);\n    }\n    if (!answerKey.at(1).found) {\n      let color2 = document.createElement('li');\n      color2.textContent = answerKey.at(1).id;\n      colorOptions.appendChild(color2);\n    }\n    if (!answerKey.at(2).found) {\n      let color3 = document.createElement('li');\n      color3.textContent = answerKey.at(2).id;\n      colorOptions.appendChild(color3);\n    }\n    mouseMenu.appendChild(colorOptions);\n    document.getElementById('PlayArea').appendChild(mouseMenu);\n    document.getElementById('myDropdown').classList.toggle(\"show\");\n  }\n  \n  // Close the dropdown menu if the user clicks outside of it\n  function removeDropdown(e){\n    if (!e.target.matches('li') ) {\n      document.getElementById('myDropdown').remove();\n    }\n  } \n\n  const colorLocationGuess = (e) => {\n    if(document.getElementById('myDropdown')){\n      removeDropdown(e);\n      isThisTheColor(e);\n      changeCursor();\n    } else {\n      changeCursor();\n      handleGuess();\n      showColorOptions(e);\n    }\n  }\n\n  //For returning colorClicked color as hex value\n  const rgba2hex = (rgba) =>\n    `${rgba\n      .match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+\\.{0,1}\\d*))?\\)$/)\n      .slice(1)\n      .map((n, i) =>\n        (i === 3 ? Math.round(parseFloat(n) * 255) : parseFloat(n))\n          .toString(16)\n          .toUpperCase()\n          .padStart(2, \"0\")\n          .replace(\"NAN\", \"\")\n      )\n      .join(\"\")}`;\n    \n  //Used during dev to display relavent info inside pixel\n  /* function rgbToHex(R,G,B) {return toHex(R)+toHex(G)+toHex(B)}\nfunction toHex(n) {\n n = parseInt(n,10);\n if (isNaN(n)) return \"00\";\n n = Math.max(0,Math.min(n,255));\n return \"0123456789ABCDEF\".charAt((n-n%16)/16)\n      + \"0123456789ABCDEF\".charAt(n%16);\n} */\n\n    const createBoard = async () => {\n        let PlayArea = document.querySelector('#PlayArea');\n        let red = 255;\n        let blue = 255+28;\n      let green = 0;\n        \n        for (let i = 10; i > 0; i--){\n          for (let j = 0; j < 15; j++){\n            let square = document.createElement(\"div\");\n            square.classList.add(\"colorSquare\");\n            let thisRed = Math.round(red - (255 / 14) * j);\n            let thisGreen = Math.round(green + 2 * i * j);\n            let thisBlue = Math.round(blue - (255 / 9) * i);\n            let rgb =\n              \"width:128px;height:108px;background-color:rgb(\" +\n              thisRed +\n              \", \" +\n              thisGreen +\n              \", \" +\n              thisBlue +\n              \");\";\n            /* let rgb =\n              \"width:128px;height:108px;background-color:#\" +\n              rgbToHex(thisRed, thisGreen, thisBlue); */\n            square.setAttribute(\"style\", rgb);\n            \n            //For dev, each square shows details of color and location\n            /* let left = 128 * j;\n            let top = 1080 - 108 * i;\n            square.textContent = square.style.backgroundColor + ', ' + rgbToHex(thisRed, thisGreen, thisBlue) + ', left: ' + left + ', top: ' + top; */\n            \n            \n            PlayArea.appendChild(square);\n            \n            //Create doc for each color as with hex title and location as details to db\n            /* let thisSquare = doc(db, 'colors/' + rgbToHex(thisRed, thisGreen, thisBlue))\n            setDoc(thisSquare, { left: left, top: top, })\n              .then(() => console.log('Yay'))\n            .catch((error)=>console.log(error)) */\n          }\n        }\n      PlayArea.setAttribute('style', 'width:1920px;height:1080px;display:flex;flex-wrap:wrap;');\n    }\n  \n    return (\n      <div id='PlayArea' className=\"PlayArea\" style={{ cursor: cursor }} onClick={colorLocationGuess}>\n        <Toaster />\n      </div>\n    );\n};\n\nexport default PlayArea;","import { initializeApp } from 'firebase/app'\nimport { getFirestore } from 'firebase/firestore'\n\nconst firebaseConfig= {\n    apiKey: \"AIzaSyDnPN-s6Tupny3TFCQTLuRlzV6YOQxyNig\",\n    authDomain: \"photo-tagging-app-b6ff2.firebaseapp.com\",\n    projectId: \"photo-tagging-app-b6ff2\",\n    storageBucket: \"photo-tagging-app-b6ff2.appspot.com\",\n    messagingSenderId: \"99182045733\",\n    appId: \"1:99182045733:web:a93697c3582f18245d2dcc\"\n  };\n  \n  const app = initializeApp(firebaseConfig);\n  export const db = getFirestore(app);","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport GameBar from './Components/GameBar.js';\nimport PlayArea from './Components/PlayArea';\nimport { collection, getDocs } from 'firebase/firestore'\nimport { db } from './init-firebase';\n\nfunction App() {\n\n  const [info, setInfo] = useState([]);\n\n  useEffect(()=>{\n    getColors();\n  },[])\n\n  function getColors(){\n    const colorCollectionRef = collection(db, 'colors');\n    getDocs(colorCollectionRef)\n      .then(response =>{\n        const allColors = response.docs.map(doc => ({\n          data: doc.data(), \n          id: doc.id,\n          found: false,\n        }));\n        setInfo(getThreeColors(allColors));\n      })\n      .catch(error=>console.log(error.message))\n  }\n\n  function getThreeColors(allColors) {\n    let colorArray = [];\n    for (let i = 0; i < 3; i++){\n      let index = Math.floor(Math.random() * allColors.length);\n      //Check for duplicate\n      while (colorArray.indexOf(allColors[index])!==-1) {\n        index = Math.floor(Math.random() * allColors.length);\n        console.log('Oops a dupe')\n      }\n      colorArray.push(allColors[index]);\n    }\n    return colorArray;\n  }\n\n  function updateFound(e) {\n    //const color2update = e.target.textContent;\n    let tempColor = info;\n    for (let color of tempColor) {\n      if (color.id === e.target.textContent) {\n        color.found = true;\n      }\n    }\n    setInfo(tempColor);\n  }\n\n  return (\n    <div className=\"App\">\n      <GameBar colors={info} />\n      <PlayArea answerKey={info} updateFound={updateFound} />\n    </div>\n  );\n}\n\nexport default App;\n\n/* Actions that could improve:\n-Maybe make some custom toasts\n-Maybe make hover over last selected square\n-Menu problems if bottom row or right most pixels need to be clicked\n*/\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);"],"sourceRoot":""}